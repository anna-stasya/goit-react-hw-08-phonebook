{"version":3,"sources":["Components/HeaderMenu/HeaderMenu.module.css","Components/ContactForm/ContactForm.module.css","Components/Button/Button.module.css","Components/ContactList/ContactList.module.css","Components/Filter/Filter.module.css","App.module.css","Components/Container/Container.module.css","redux/views/Views.module.css","redux/phoneActions.js","redux/phoneReducer.js","redux/auth/auth-operations.js","redux/auth/auth-slice.js","redux/phoneStore.js","redux/views/HomeViews.jsx","redux/views/RegistrationViews.jsx","redux/views/LoginViews.jsx","redux/auth/auth-selectors.js","Components/HeaderMenu/UserMenu.jsx","Components/Container/Container.jsx","Components/HeaderMenu/Navigation.jsx","Components/HeaderMenu/AuthNav.jsx","Components/HeaderMenu/AppBar/AppBar.jsx","Components/PrivateRoute.js","Components/PublicRoute.js","redux/phoneOperations.js","redux/phoneSelectors.js","Components/ContactList/ContactList.jsx","Components/Filter/Filter.jsx","Components/ContactForm/ContactForm.jsx","App.js","index.js"],"names":["module","exports","phoneActions","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactsRequest","addContactsSuccess","addContactsError","deleteContactsRequest","deleteContactsSuccess","deleteContactsError","filterContact","dataContacts","createReducer","_","action","payload","state","some","contact","name","toLowerCase","alert","filter","id","isLoading","error","combineReducers","axios","defaults","baseURL","token","headers","common","Authorization","authOperations","register","createAsyncThunk","credentials","a","console","log","post","data","logIn","logOut","fetchCurrentUser","thunkAPI","getState","persistedToken","auth","rejectWithValue","get","authSlice","createSlice","initialState","user","email","isLoggedIn","isFetchCurrentUser","extraReducers","fulfilled","pending","rejected","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authSliceReducer","contacts","phoneReducer","devtools","process","persistor","persistStore","HomeViews","className","s","container","title","RegisterView","dispatch","useDispatch","useState","setName","setEmail","password","setPassword","handleChange","target","value","onSubmit","e","preventDefault","form","autoComplete","label","input","type","placeholder","onChange","b","btn","LoginView","authSelectors","getIsLoggedIn","getUsername","getIsFetchCurrent","UserMenu","useSelector","onClick","Container","children","Navigation","to","exact","link","activeClassName","activeLink","AuthNav","AppBar","style","header","PrivateRoute","redirectTo","routeProps","PublicRoute","restricted","shouidRedirect","phoneOperations","fetchContacts","massage","addContact","contactData","shortid","generate","completed","then","catch","deleteContacts","contactId","delete","getFilter","phoneSelectors","getContacts","getVisisbleContacts","createSelector","normoliseFilter","includes","connect","onDeleteContacts","map","number","item","tel","btnDel","event","currentTarget","text","pattern","required","setNumber","btnAdd","App","useEffect","app","path","titleContacts","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.04b0ab19.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"HeaderMenu_link__1KtCS\",\"activeLink\":\"HeaderMenu_activeLink__4kQW3\",\"container\":\"HeaderMenu_container__V_4A3\",\"avatar\":\"HeaderMenu_avatar__2ZAxA\",\"name\":\"HeaderMenu_name__2wfwg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__v39S5\",\"label\":\"ContactForm_label__17UrJ\",\"input\":\"ContactForm_input__1z4yB\",\"btnAdd\":\"ContactForm_btnAdd__3i0qT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__3f-IO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__PtcTB\",\"item\":\"ContactList_item__1gODh\",\"name\":\"ContactList_name__2VCLv\",\"tel\":\"ContactList_tel__2g0TG\",\"btnDel\":\"ContactList_btnDel__3Q-He\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__2bFGy\",\"label\":\"Filter_label__DFre4\",\"text\":\"Filter_text__1nRSu\",\"input\":\"Filter_input__2oaWQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3k-6V\",\"title\":\"App_title__3GvFa\",\"titleContacts\":\"App_titleContacts__1v7kl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1xE_e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Views_container__3X77y\",\"title\":\"Views_title__9r2Xg\",\"form\":\"Views_form__1f4C1\",\"label\":\"Views_label__3n5dd\",\"input\":\"Views_input__2wlIv\"};","import { createAction } from '@reduxjs/toolkit';\n\n//!синхронный Action который дойдет до reducer\n\n//в ожидании (pending)\nconst fetchContactsRequest = createAction('contacts/fetchContactsRequest');\n//выполнено (fulfilled)\nconst fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\n//отклоненный (rejected)\nconst fetchContactsError = createAction('contacts/fetchContactsError');\n\nconst addContactsRequest = createAction('contacts/addContactsRequest');\nconst addContactsSuccess = createAction('contacts/addContactsSuccess');\nconst addContactsError = createAction('contacts/addContactsError');\n\nconst deleteContactsRequest = createAction('Contacts/deleteContactsRequest');\nconst deleteContactsSuccess = createAction('Contacts/deleteContactsSuccess');\nconst deleteContactsError = createAction('Contacts/deleteContactsError');\n\nconst filterContact = createAction('Contacts/filterContact');\n\nconst phoneActions = {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactsRequest,\n  addContactsSuccess,\n  addContactsError,\n  deleteContactsRequest,\n  deleteContactsSuccess,\n  deleteContactsError,\n  filterContact,\n};\nexport default phoneActions;\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\n\nimport phoneActions from './phoneActions';\n\nconst dataContacts = createReducer([], {\n  [phoneActions.fetchContactsSuccess]: (_, action) => action.payload,\n  [phoneActions.addContactsSuccess]: (state, action) => {\n    if (\n      state.some(\n        contact =>\n          contact.name.toLowerCase() === action.payload.name.toLowerCase(),\n      )\n    ) {\n      alert(`This contact already exists`);\n      return;\n    }\n    return [...state, action.payload];\n  },\n  [phoneActions.deleteContactsSuccess]: (state, action) =>\n    state.filter(contact => contact.id !== action.payload),\n});\n\nconst isLoading = createReducer(false, {\n  [phoneActions.fetchContactsRequest]: () => true,\n  [phoneActions.fetchContactsSuccess]: () => false,\n  [phoneActions.fetchContactsError]: () => false,\n\n  [phoneActions.addContactsRequest]: () => true,\n  [phoneActions.addContactsSuccess]: () => false,\n  [phoneActions.addContactsError]: () => false,\n\n  [phoneActions.deleteContactsRequest]: () => true,\n  [phoneActions.deleteContactsSuccess]: () => false,\n  [phoneActions.deleteContactsError]: () => false,\n});\n\nconst filter = createReducer('', {\n  [phoneActions.filterContact]: (_, action) => action.payload,\n});\n\nconst error = createReducer(null, {\n  [phoneActions.fetchContactsError]: (_, action) => action.payload,\n  [phoneActions.fetchContactsRequest]: () => null,\n});\n\n//const error = createReducer(null, {});\n\nexport default combineReducers({\n  dataContacts,\n  isLoading,\n  filter,\n  error,\n});\n","import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\n//на все запроссы авторизации\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = createAsyncThunk('auth/register', async (credentials) => {\r\n  console.log(credentials);\r\n  try {\r\n    const { data } = await axios.post('/users/signup', credentials);\r\n    token.set(data.token);\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n});\r\n\r\nconst logIn = createAsyncThunk('auth/login', async (credentials) => {\r\n  try {\r\n    const { data } = await axios.post('/users/login', credentials);\r\n    token.set(data.token);\r\n    return data;\r\n  } catch (error) {}\r\n});\r\n\r\nconst logOut = createAsyncThunk('auth/logout', async () => {\r\n  try {\r\n    await axios.post('/users/logout');\r\n    token.unset();\r\n  } catch (error) {}\r\n});\r\n\r\nconst fetchCurrentUser = createAsyncThunk(\r\n  'auth/refresh',\r\n  async (_, thunkAPI) => {\r\n    const state = thunkAPI.getState();\r\n    const persistedToken = state.auth.token;\r\n\r\n    if (persistedToken === null) {\r\n      return thunkAPI.rejectWithValue();\r\n    }\r\n\r\n    token.set(persistedToken);\r\n    try {\r\n      const { data } = await axios.get('/users/current');\r\n      return data;\r\n    } catch (error) {}\r\n  },\r\n);\r\n\r\nconst authOperations = {\r\n  register,\r\n  logIn,\r\n  logOut,\r\n  fetchCurrentUser,\r\n};\r\n\r\nexport default authOperations ;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport  authOperations  from './auth-operations';\r\n\r\nconst initialState = {\r\n  user: { name: null, email: null },\r\n  token: null,\r\n  isLoggedIn: false,\r\n  isFetchCurrentUser: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  extraReducers: {\r\n    [authOperations.register.fulfilled](state, action) {\r\n      console.log('register', action )\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [authOperations.logIn.fulfilled](state, action) {\r\n      console.log('login', action )\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [authOperations.logOut.fulfilled](state) {\r\n      state.user = { name: null, email: null };\r\n      state.token = null;\r\n      state.isLoggedIn = false;\r\n    },\r\n    [authOperations.fetchCurrentUser.pending](state) {\r\n      state.isFetchCurrentUser = true;\r\n    },\r\n    [authOperations.fetchCurrentUser.fulfilled](state, action) {\r\n      state.user = action.payload;\r\n      state.isLoggedIn = true;\r\n      state.isFetchCurrentUser = false;\r\n    },\r\n    [authOperations.fetchCurrentUser.rejected](state) {\r\n      state.isFetchCurrentUser = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport logger from 'redux-logger';\nimport storage from \"redux-persist/lib/storage\";\nimport phoneReducer from './phoneReducer';\nimport authSliceReducer from './auth/auth-slice';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n   logger,\n ];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n}\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authSliceReducer),\n    contacts: phoneReducer,\n  },\n  middleware,\n  devtools: process.env.NODE_ENV !== 'development',\n});\n\nexport const persistor = persistStore(store);","import React from 'react';\r\n\r\nimport s from './Views.module.css';\r\n\r\nconst HomeViews = () => (\r\n  <div className={s.container}>\r\n    <h1 className={s.title}>Hello, welcome in your Phone book!</h1>\r\n  </div>\r\n);\r\n\r\nexport default HomeViews;\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport  authOperations  from '../auth/auth-operations';\r\n\r\nimport s from './Views.module.css';\r\nimport b from '../../Components/Button/Button.module.css';\r\n\r\nexport default function RegisterView() {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case 'name':\r\n        return setName(value);\r\n      case 'email':\r\n        return setEmail(value);\r\n      case 'password':\r\n        return setPassword(value);\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch(authOperations.register({ name, email, password }));\r\n    setName('');\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Ragistration form</h1>\r\n\r\n      <form onSubmit={handleSubmit} className={s.form} autoComplete=\"off\">\r\n        <label className={s.label}>\r\n          Name\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Enter name...\"\r\n            value={name}\r\n            onChange={handleChange} />\r\n        </label>\r\n\r\n        <label className={s.label}>\r\n          Email\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Enter email...\"\r\n            value={email}\r\n            onChange={handleChange}\r\n            className={s.input}\r\n          />\r\n        </label>\r\n\r\n        <label className={s.label}>\r\n          Passwords:\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"********\"\r\n            value={password}\r\n            onChange={handleChange}\r\n            className={s.input}\r\n          />\r\n        </label>\r\n\r\n        {/* <label className={s.label}>\r\n          Confirm passwords:\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n             placeholder=\"********\"\r\n            value={password}\r\n            onChange={handleChange}\r\n            className={s.input}\r\n          />\r\n        </label> */}\r\n\r\n        <button className={b.btn} type=\"submit\">Register</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport  authOperations  from '../auth/auth-operations';\r\n\r\nimport s from './Views.module.css';\r\nimport b from '../../Components/Button/Button.module.css';\r\n\r\n\r\n\r\nexport default function LoginView() {\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case 'email':\r\n        return setEmail(value);\r\n      case 'password':\r\n        return setPassword(value);\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch(authOperations.logIn({ email, password }));\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Login form</h1>\r\n\r\n      <form onSubmit={handleSubmit} className={s.form} autoComplete=\"off\">\r\n        <label className={s.label}>\r\n          Email\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Enter email...\"\r\n            value={email}\r\n            onChange={handleChange}\r\n            className={s.input}\r\n          />\r\n        </label>\r\n\r\n        <label className={s.label}>\r\n          Password\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"********\"\r\n            value={password}\r\n            onChange={handleChange}\r\n            className={s.input}\r\n          />\r\n        </label>\r\n\r\n        <button className={b.btn} type=\"submit\">Enter</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}","const getIsLoggedIn = state => state.auth.isLoggedIn;\r\nconst getUsername = state => state.auth.user.name;\r\nconst getIsFetchCurrent = state => state.auth.user.isFetchCurrentUser;\r\n\r\nconst authSelectors = {\r\n    getIsLoggedIn,\r\n    getUsername,\r\n    getIsFetchCurrent,\r\n};\r\n\r\nexport default authSelectors;","import { useDispatch, useSelector } from 'react-redux';\r\nimport   authOperations  from '../../redux/auth/auth-operations';\r\nimport  authSelectors  from '../../redux/auth/auth-selectors';\r\n//import defaultAvatar from './default-avatar.png';\r\n\r\nimport s from './HeaderMenu.module.css';\r\nimport b from '../Button/Button.module.css';\r\n\r\nexport default function UserMenu() {\r\n  const dispatch = useDispatch();\r\n  const name = useSelector(authSelectors.getUsername);\r\n // const avatar = defaultAvatar;\r\n\r\n  return (\r\n    <div className={s.container}>\r\n      {/* <img src={avatar} alt=\"\" width=\"32\" className={s.avatar} /> */}\r\n      <span className={s.name}>Welcome, {name}</span>\r\n\r\n      <button\r\n        className={b.btn}\r\n        type=\"button\"\r\n        onClick={() => dispatch(authOperations.logOut())}>\r\n        Exit\r\n      </button>\r\n    </div>\r\n  );\r\n}","import s from './Container.module.css';\r\n\r\nexport default function Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport authSelectors from '../../redux/auth/auth-selectors';\r\n\r\nimport s from './HeaderMenu.module.css';\r\n\r\nconst Navigation = () => {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n\r\n  return (\r\n    <nav>\r\n      <NavLink to=\"/\" exact className={s.link} activeClassName={s.activeLink}>\r\n        Home\r\n      </NavLink>\r\n\r\n       {isLoggedIn && ( \r\n        <NavLink\r\n          to=\"/contactsForm\"\r\n          exact\r\n          className={s.link}\r\n          activeClassName={s.activeLink}\r\n        >\r\n          Phone book\r\n        </NavLink>\r\n        )}  \r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport s from './HeaderMenu.module.css';\r\n\r\nexport default function AuthNav() {\r\n  return (\r\n    <div>\r\n      <NavLink\r\n        to=\"/register\"\r\n        exact\r\n        className={s.link}\r\n        activeClassName={s.activeLink}\r\n      >\r\n        Registration\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/login\"\r\n        exact\r\n        className={s.link}\r\n        activeClassName={s.activeLink}\r\n      >\r\n        Login\r\n      </NavLink>\r\n    </div>\r\n  );\r\n}","import { useSelector } from 'react-redux';\r\n\r\nimport Navigation from '../Navigation';\r\nimport UserMenu from '../UserMenu';\r\nimport AuthNav from '../AuthNav';\r\n\r\nimport authSelectors from '../../../redux/auth/auth-selectors';\r\n\r\nimport s from './AppBar.module.css';\r\n\r\nexport default function AppBar() {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <header style={s.header}>\r\n      <Navigation />\r\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n    </header>\r\n  );\r\n}","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport authSelectors from '../redux/auth/auth-selectors';\r\n\r\nexport default function PrivateRoute({\r\n  children,\r\n  redirectTo = '/login',\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\r\n    </Route>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport authSelectors from '../redux/auth/auth-selectors';\r\n\r\nexport default function PublicRoute({\r\n  children,\r\n  restricted = false,\r\n  redirectTo = '/contactsForm',\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  const shouidRedirect = isLoggedIn && restricted;\r\n  return (\r\n    <Route {...routeProps}>\r\n      {shouidRedirect ? <Redirect to={redirectTo} /> : children}\r\n    </Route>\r\n  );\r\n}\r\n","import axios from 'axios';\nimport shortid from 'shortid';\nimport phoneActions from './phoneActions';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n//fetchContacts - операция, она использует синхронные медоты phoneActions по http запросу.\n//до, успех и ошибка\n//-----------------fetchContacts---------------------------\nconst fetchContacts = () => async dispatch => {\n  dispatch(phoneActions.fetchContactsRequest());\n\n  try {\n    const { data } = await axios.get('/contacts');\n    dispatch(phoneActions.fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(phoneActions.fetchContactsError(error.massage));\n  }\n};\n\n//-----------------addContact---------------------------\nconst addContact = contactData => dispatch => {\n  const contact = {\n    id: shortid.generate(),\n    ...contactData,\n    completed: false,\n  };\n\n  dispatch(phoneActions.addContactsRequest());\n\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(phoneActions.addContactsSuccess(data)))\n    .catch(error => dispatch(phoneActions.addContactsError(error.massage)));\n};\n\n//-----------------deleteContacts---------------------------\nconst deleteContacts = contactId => dispatch => {\n  dispatch(phoneActions.deleteContactsRequest());\n\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(phoneActions.deleteContactsSuccess(contactId)))\n    .catch(error => dispatch(phoneActions.deleteContactsError(error.massage)));\n};\n\nconst phoneOperations = { fetchContacts, addContact, deleteContacts };\nexport default phoneOperations;\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getContacts = state => state.contacts.isLoading;\nconst getFilter = state => state.contacts.filter;\nconst getAllContacts = state => state.contacts.dataContacts;\n//-----------------поиск по фильтру\nconst getVisisbleContacts = createSelector(\n  [getAllContacts, getFilter],\n  (contacts, filter) => {\n    const normoliseFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normoliseFilter),\n    );\n  },\n);\n\nconst phoneSelectors = { getContacts, getFilter, getVisisbleContacts };\n\nexport default phoneSelectors;\n\n//другой способ\n// const getVisisbleContacts = state => {\n//   const contacts = getAllContacts(state);\n//   const filter = getFilter(state);\n//   const normoliseFilter = filter.toLowerCase();\n\n//   return contacts.filter(contact =>\n//     contact.name.toLowerCase().includes(normoliseFilter),\n//   );\n// };\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport phoneOperations from '../../redux/phoneOperations';\nimport phoneSelectors from '../../redux/phoneSelectors';\n\nimport s from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContacts }) => {\n  return (\n    <ul className={s.contacts}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={s.item} key={id}>\n          <p className={s.name}>{name}</p>\n          <p className={s.tel}>{number}</p>\n          <button className={s.btnDel} onClick={() => onDeleteContacts(id)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nconst mapStateToProps = state => ({\n  contacts: phoneSelectors.getVisisbleContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContacts: id => dispatch(phoneOperations.deleteContacts(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport phoneActions from '../../redux/phoneActions';\nimport phoneSelectors from '../../redux/phoneSelectors';\nimport s from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => (\n  <div className={s.filter}>\n    <label className={s.label}>\n      <p className={s.text}>Find contacts by name</p>\n      <input\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        value={value}\n        onChange={onChange}\n        className={s.input}\n      />\n    </label>\n  </div>\n);\n\nconst mapStateToProps = state => ({\n  value: phoneSelectors.getFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: event =>\n    dispatch(phoneActions.filterContact(event.currentTarget.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import { useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport phoneOperations from '../../redux/phoneOperations';\n\nimport s from './ContactForm.module.css';\n\nfunction ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  //ввод в интпут\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  //добавить контакт через кнопку\n  const handleSabmit = event => {\n    event.preventDefault();\n\n    onSubmit({ name, number });\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSabmit}>\n      <label className={s.label}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={handleChange}\n          className={s.input}\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={handleChange}\n          className={s.input}\n        />\n      </label>\n      <button type=\"sabmit\" className={s.btnAdd}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: value => dispatch(phoneOperations.addContact(value)),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\n//Views\nimport HomeViews from './redux/views/HomeViews';\nimport RegistrationViews from './redux/views/RegistrationViews';\nimport LoginViews from './redux/views/LoginViews';\nimport  authOperations  from './redux/auth/auth-operations';\nimport authSelectors from './redux/auth/auth-selectors';\nimport UserMenu from './Components/HeaderMenu/UserMenu';\n//Components\nimport Container from './Components/Container/Container';\nimport AppBar from './Components/HeaderMenu/AppBar/AppBar';\nimport PrivateRoute from './Components/PrivateRoute';\nimport PublicRoute from './Components/PublicRoute';\nimport ContactList from './Components/ContactList/ContactList';\nimport Filter from './Components/Filter/Filter';\nimport ContactForm from './Components/ContactForm/ContactForm';\n//utils\n//import { routes } from './utils/routes';\n\nimport s from './App.module.css';\n\nfunction App() {\n  const dispatch = useDispatch();\n  const isFetchCurrentUser = useSelector(\n    authSelectors.getIsFetchCurrent,\n  );\n\n  useEffect(() => {\n    dispatch(authOperations.fetchCurrentUser());\n  }, [dispatch]);\n\n  return (\n     !isFetchCurrentUser && (\n      <div className={s.app}>\n        <Container>\n          <AppBar />\n\n          <Switch>\n            {/* ---------------------PublicRoute */}\n            {/*=================== HomeViews ===================*/}\n          <PublicRoute exact path=\"/\">\n            <HomeViews />\n            </PublicRoute>\n            {/*=================== RegistrationViews ===================*/}\n            <PublicRoute path=\"/register\" restricted>\n              <RegistrationViews />\n            </PublicRoute>\n            {/*=================== LoginViews ===================*/}\n            <PublicRoute path=\"/login\" restricted redirectTo=\"/contactsForm\">\n              <LoginViews />\n            </PublicRoute>\n            {/*---------------------- PrivateRoute */}\n            {/*=================== ContactForm ===================*/}\n            <PrivateRoute path=\"/contactsForm\" redirectTo=\"/login\">\n              <h1 className={s.title}>Phonebook</h1>\n              <ContactForm />\n              <h2 className={s.titleContacts}>Contacts</h2>\n              <Filter />\n            <ContactList />\n            \n            </PrivateRoute>\n          </Switch>\n        </Container>\n      </div>\n     )\n  );\n}\n\nexport default App;\n\n//  {/* <Route path=\"/contactsForm\" exact component={ContactForm} />\n//         <Route path=\"/filter\" exact component={Filter} />\n//         <Route path=\"/contactList\" exact component={ContactList} /> */}\n// {/* <Route path=\"/\" exact component={HomeViews} /> */}\n//           <Route path=\"/register\" component={RegistrationViews} />\n//           <Route path=\"/login\" component={LoginViews} />\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport { store, persistor } from './redux/phoneStore';\nimport App from './App';\n\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor} >\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n\n"],"sourceRoot":""}